/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package student.information.system;

import java.util.Date;
import java.util.LinkedList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author maraa
 */
public class StudentDashboard extends javax.swing.JFrame {

    /**
     * Creates new form StudentDashbaord
     */
    
    public int studentId = StudentLogin.studentIdLogin;
    
    public StudentDashboard() {
        initComponents();
        InitializeStudentInfo();
        InitializeAndSetCourses();
        SetEnrolledCoursesTable();
        
        EditDisable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        schoolTitle = new javax.swing.JLabel();
        studentDashboardLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        editInfoButton = new javax.swing.JButton();
        lastNameField = new javax.swing.JTextField();
        lastNameLabel = new javax.swing.JLabel();
        firstNameField = new javax.swing.JTextField();
        firstNameLabel = new javax.swing.JLabel();
        middleNameField = new javax.swing.JTextField();
        middleNameLabel = new javax.swing.JLabel();
        gradeLabel = new javax.swing.JLabel();
        gradeChoice = new javax.swing.JComboBox<>();
        sectionLabel = new javax.swing.JLabel();
        sectionChoice = new javax.swing.JComboBox<>();
        birthdateLabel = new javax.swing.JLabel();
        birthMonthChoice = new javax.swing.JComboBox<>();
        birthDayChoice = new javax.swing.JComboBox<>();
        birthYearChoice = new javax.swing.JComboBox<>();
        addressField = new javax.swing.JTextField();
        addressLabel = new javax.swing.JLabel();
        contactNumLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        emailField = new javax.swing.JTextField();
        contactNumField1 = new javax.swing.JTextField();
        enrolledSubjLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        enrolledSubjTable = new javax.swing.JTable();
        availableCourseLabel = new javax.swing.JLabel();
        courseChoice = new javax.swing.JComboBox<>();
        removeCourseButton = new javax.swing.JButton();
        logoutButton = new javax.swing.JButton();
        enrolButton = new javax.swing.JButton();
        submitButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1024, 480));
        setMinimumSize(new java.awt.Dimension(1024, 480));
        setPreferredSize(new java.awt.Dimension(1024, 480));
        setResizable(false);

        schoolTitle.setFont(new java.awt.Font("Verdana", 1, 20)); // NOI18N
        schoolTitle.setText("XY Senior High School");

        studentDashboardLabel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        studentDashboardLabel.setText("Student Dashboard");

        nameLabel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        nameLabel.setText("Name");

        editInfoButton.setText("Edit Personal Information");
        editInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editInfoButtonActionPerformed(evt);
            }
        });

        lastNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastNameFieldActionPerformed(evt);
            }
        });

        lastNameLabel.setText("Last Name");

        firstNameLabel.setText("First Name");

        middleNameLabel.setText("Middle Name");

        gradeLabel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        gradeLabel.setText("Grade");

        gradeChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "11", "12" }));

        sectionLabel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        sectionLabel.setText("Section");

        sectionChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Symmetry", "Python", "Java", "Unity" }));

        birthdateLabel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        birthdateLabel.setText("Birthdate");

        birthMonthChoice.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        birthMonthChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        birthMonthChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                birthMonthChoiceActionPerformed(evt);
            }
        });

        birthDayChoice.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        birthDayChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        birthDayChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                birthDayChoiceActionPerformed(evt);
            }
        });

        birthYearChoice.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        birthYearChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022" }));
        birthYearChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                birthYearChoiceActionPerformed(evt);
            }
        });

        addressLabel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        addressLabel.setText("Address");

        contactNumLabel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        contactNumLabel.setText("Contact Number");

        emailLabel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        emailLabel.setText("Email");

        enrolledSubjLabel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        enrolledSubjLabel.setText("Enrolled Subjects");

        enrolledSubjTable.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        enrolledSubjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course Code", "Course Name", "Teacher", "Schedule"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(enrolledSubjTable);

        availableCourseLabel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        availableCourseLabel.setText("Available Courses");

        courseChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseChoiceActionPerformed(evt);
            }
        });

        removeCourseButton.setText("Remove Courses");
        removeCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeCourseButtonActionPerformed(evt);
            }
        });

        logoutButton.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        logoutButton.setText("Logout");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        enrolButton.setText("Enrol");
        enrolButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enrolButtonActionPerformed(evt);
            }
        });

        submitButton.setText("Submit Changes");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(441, 441, 441)
                        .addComponent(studentDashboardLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(nameLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(editInfoButton))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(birthdateLabel)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(birthMonthChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(birthDayChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(birthYearChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(enrolledSubjLabel))
                                        .addGap(10, 10, 10)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(addressLabel)
                                            .addComponent(addressField)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lastNameLabel)
                                            .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(firstNameLabel)
                                            .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(middleNameLabel)
                                            .addComponent(middleNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 574, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(452, 452, 452)
                                .addComponent(removeCourseButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(availableCourseLabel)
                            .addComponent(courseChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(gradeLabel)
                                    .addComponent(gradeChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sectionLabel)
                                    .addComponent(sectionChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(contactNumLabel)
                                    .addComponent(contactNumField1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(emailLabel)
                                    .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(submitButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cancelButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(enrolButton)
                                .addGap(8, 8, 8)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(384, 384, 384)
                .addComponent(schoolTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logoutButton)
                .addGap(49, 49, 49))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(schoolTitle)
                    .addComponent(logoutButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(studentDashboardLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameLabel)
                            .addComponent(editInfoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lastNameLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(firstNameLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(middleNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(middleNameLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(birthdateLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(birthMonthChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(birthDayChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(birthYearChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addressLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(gradeLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(sectionLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(sectionChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(gradeChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(contactNumLabel)
                            .addComponent(emailLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(contactNumField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(enrolledSubjLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(removeCourseButton)
                                .addComponent(submitButton)
                                .addComponent(cancelButton))
                            .addComponent(enrolButton)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(availableCourseLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(courseChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editInfoButtonActionPerformed
        // TODO add your handling code here:
        EditEnable();
    }//GEN-LAST:event_editInfoButtonActionPerformed

    private void birthMonthChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_birthMonthChoiceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_birthMonthChoiceActionPerformed

    private void birthDayChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_birthDayChoiceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_birthDayChoiceActionPerformed

    private void birthYearChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_birthYearChoiceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_birthYearChoiceActionPerformed

    private void removeCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeCourseButtonActionPerformed
        // TODO add your handling code here:
        
        if (enrolledSubjTable.getSelectedRow() != -1){
            Subjects newSubject = DataHandler.Students.registeredStudents.get(studentId).getSubjectsEnrolled().get(enrolledSubjTable.getSelectedRow());
            DataHandler.Students.registeredStudents.get(studentId).getSubjectsEnrolled().remove(newSubject);
            
            courseChoice.removeAllItems();
            for(Subjects s:DataHandler.Students.availableSubjects){
                String item = s.getSubjectCode() + " - " + s.getName() + " - " + s.getTeacher();
                courseChoice.addItem(item);
            }

            SetEnrolledCoursesTable();
        } else {
            JOptionPane.showMessageDialog(rootPane, "There is no selected course to remove.");
            return;
        }
        
    }//GEN-LAST:event_removeCourseButtonActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        // TODO add your handling code here:
        int selection = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to log out?", "Logout Confirmation", JOptionPane.YES_NO_OPTION);
        
        if (selection == JOptionPane.YES_OPTION){
            this.setVisible(false);
            new StudentLogin().setVisible(true);
        } else {
            return;
        }
        
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void lastNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastNameFieldActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        
        EditDisable();
        
        InitializeStudentInfo();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        
        EditDisable();
        
        SubmitNewInfo();
        
        InitializeStudentInfo();
        
    }//GEN-LAST:event_submitButtonActionPerformed

    private void courseChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseChoiceActionPerformed
        // TODO add your handling code here:
        if (courseChoice.getSelectedItem() != null){
            courseChoice.setToolTipText(courseChoice.getSelectedItem().toString());
        }
    }//GEN-LAST:event_courseChoiceActionPerformed

    private void enrolButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enrolButtonActionPerformed
        // TODO add your handling code here:
        if (courseChoice.getSelectedIndex() >= 0){
            Subjects newSubject = DataHandler.Students.availableSubjects.get(courseChoice.getSelectedIndex());
            
            for(Subjects s: DataHandler.Students.registeredStudents.get(studentId).getSubjectsEnrolled()){
                if (s.getSubjectCode().equals(newSubject.getSubjectCode())){
                    JOptionPane.showMessageDialog(rootPane, "You cannot select a course you are already enrolled to.");
                    return;
                } else {
                    continue;
                }
            }
            
            DataHandler.Students.registeredStudents.get(studentId).addSubject(newSubject);
            courseChoice.removeAllItems();
            for (Subjects subjTemp : DataHandler.Students.availableSubjects) {
                String item = subjTemp.getSubjectCode() + " - " + subjTemp.getName() + " - " + subjTemp.getTeacher();
                courseChoice.addItem(item);
            }
            SetEnrolledCoursesTable();
            
        } else {
            JOptionPane.showMessageDialog(rootPane, "No more courses available.");
            return;
        }
        
    }//GEN-LAST:event_enrolButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentDashboard().setVisible(true);
            }
        });
    }
    
    public void InitializeStudentInfo(){
        lastNameField.setText(DataHandler.Students.registeredStudents.get(studentId).getLastName());
        firstNameField.setText(DataHandler.Students.registeredStudents.get(studentId).getFirstName());
        middleNameField.setText(DataHandler.Students.registeredStudents.get(studentId).getMiddleName());
        addressField.setText(DataHandler.Students.registeredStudents.get(studentId).getAddress());
        contactNumField1.setText(DataHandler.Students.registeredStudents.get(studentId).getContactNum());
        emailField.setText(DataHandler.Students.registeredStudents.get(studentId).getEmailAddress());
        
        
        String sectionOld = DataHandler.Students.registeredStudents.get(studentId).getSection();
        int gradeOld = DataHandler.Students.registeredStudents.get(studentId).getGradeLevel();
        
        if (sectionOld.equals("Symmetry")){
            sectionChoice.setSelectedIndex(0);
        } else if (sectionOld.equals("Python")) {
            sectionChoice.setSelectedIndex(1);
        } else if (sectionOld.equals("Java")) {
            sectionChoice.setSelectedIndex(2);
        } else if (sectionOld.equals("Unity")) {
            sectionChoice.setSelectedIndex(3);
        }
        
        if (gradeOld == 11){
            gradeChoice.setSelectedIndex(0);
        } else if (gradeOld == 12){
            gradeChoice.setSelectedIndex(1);
        }
        
        
        birthMonthChoice.setSelectedIndex(DataHandler.Students.registeredStudents.get(studentId).getBirthDate().getMonth());
        birthDayChoice.setSelectedIndex(DataHandler.Students.registeredStudents.get(studentId).getBirthDate().getDate()-1);
        birthYearChoice.setSelectedIndex(DataHandler.Students.registeredStudents.get(studentId).getBirthDate().getYear()-80);
        
    }
    
    public void EditDisable(){
        lastNameField.setEnabled(false);
        firstNameField.setEnabled(false);
        middleNameField.setEnabled(false);
        addressField.setEnabled(false);
        contactNumField1.setEnabled(false);
        emailField.setEnabled(false);
        sectionChoice.setEnabled(false);
        gradeChoice.setEnabled(false);
        birthMonthChoice.setEnabled(false);
        birthDayChoice.setEnabled(false);
        birthYearChoice.setEnabled(false);
        
        submitButton.setVisible(false);
        cancelButton.setVisible(false);
        editInfoButton.setEnabled(true);
    }
    
    public void EditEnable(){
        lastNameField.setEnabled(true);
        firstNameField.setEnabled(true);
        middleNameField.setEnabled(true);
        addressField.setEnabled(true);
        contactNumField1.setEnabled(true);
        emailField.setEnabled(true);
        sectionChoice.setEnabled(true);
        gradeChoice.setEnabled(true);
        birthMonthChoice.setEnabled(true);
        birthDayChoice.setEnabled(true);
        birthYearChoice.setEnabled(true);
        
        submitButton.setVisible(true);
        cancelButton.setVisible(true);
        editInfoButton.setEnabled(false);
    }
    
    public void SubmitNewInfo(){
        String lastNameNew = lastNameField.getText();
        String firstNameNew = firstNameField.getText();
        String middleNameNew = middleNameField.getText();
        String addressNew = addressField.getText();
        String contactNumNew = contactNumField1.getText();
        String emailNew = emailField.getText();
        String sectionNew = sectionChoice.getSelectedItem().toString();
        String gradeString = gradeChoice.getSelectedItem().toString();
        int gradeNew = Integer.parseInt(gradeString);
        Date birthDateNew = new Date (birthYearChoice.getSelectedIndex() + 80,
                                      birthMonthChoice.getSelectedIndex(),
                                      birthDayChoice.getSelectedIndex() + 1);
        
        if (lastNameNew.isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Last name cannot be blank.");
            return;
        }
        if (firstNameNew.isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "First name cannot be blank.");
            return;
        }
        if (middleNameNew.isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Middle name cannot be blank.");
            return;
        }
        if (addressNew.isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Address cannot be blank");
            return;
        }
        if (contactNumNew.isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Contact number cannot be blank.");
            return;
        }
        if (emailNew.isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Email cannot be blank.");
            return;
        }
        
        DataHandler.Students.registeredStudents.get(studentId).setLastName(lastNameNew);
        DataHandler.Students.registeredStudents.get(studentId).setFirstName(firstNameNew);
        DataHandler.Students.registeredStudents.get(studentId).setMiddleName(middleNameNew);
        DataHandler.Students.registeredStudents.get(studentId).setAddress(addressNew);
        DataHandler.Students.registeredStudents.get(studentId).setContactNum(contactNumNew);
        DataHandler.Students.registeredStudents.get(studentId).setEmailAddress(emailNew);
        DataHandler.Students.registeredStudents.get(studentId).setSection(sectionNew);
        DataHandler.Students.registeredStudents.get(studentId).setGradeLevel(gradeNew);
        DataHandler.Students.registeredStudents.get(studentId).setBirthDate(birthDateNew);
        
    }
    
    public void InitializeAndSetCourses(){
        courseChoice.removeAllItems();
        for(Subjects s:DataHandler.Students.availableSubjects){
            String item = s.getSubjectCode() + " - " + s.getName() + " - " + s.getTeacher();
            courseChoice.addItem(item);
        }
    }
    
    public void SetEnrolledCoursesTable(){
        LinkedList<Subjects> subjectsEnrolled = DataHandler.Students.registeredStudents.get(studentId).getSubjectsEnrolled();
        DefaultTableModel model = (DefaultTableModel) enrolledSubjTable.getModel();
        model.setRowCount(0);
        for(Subjects s: subjectsEnrolled){
            model.addRow(
                new Object[]{
                    s.getSubjectCode(),
                    s.getName(),
                    s.getTeacher(),
                    s.getStart() + " - " + s.getEnd()
                }
            );
        }
        
        enrolledSubjTable.setModel(model);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressField;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JLabel availableCourseLabel;
    private javax.swing.JComboBox<String> birthDayChoice;
    private javax.swing.JComboBox<String> birthMonthChoice;
    private javax.swing.JComboBox<String> birthYearChoice;
    private javax.swing.JLabel birthdateLabel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField contactNumField1;
    private javax.swing.JLabel contactNumLabel;
    private javax.swing.JComboBox<String> courseChoice;
    private javax.swing.JButton editInfoButton;
    private javax.swing.JTextField emailField;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JButton enrolButton;
    private javax.swing.JLabel enrolledSubjLabel;
    private javax.swing.JTable enrolledSubjTable;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JComboBox<String> gradeChoice;
    private javax.swing.JLabel gradeLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JButton logoutButton;
    private javax.swing.JTextField middleNameField;
    private javax.swing.JLabel middleNameLabel;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JButton removeCourseButton;
    private javax.swing.JLabel schoolTitle;
    private javax.swing.JComboBox<String> sectionChoice;
    private javax.swing.JLabel sectionLabel;
    private javax.swing.JLabel studentDashboardLabel;
    private javax.swing.JButton submitButton;
    // End of variables declaration//GEN-END:variables
}
